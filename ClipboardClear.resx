<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACA
        IAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgA
        AECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQ
        JAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkA
        AAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACC
        BAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEA
        AEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQ
        AACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAA
        IEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgS
        AAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAA
        BAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEEC
        AACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACA
        IAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgA
        AECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQ
        JAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkA
        AAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACC
        BAAABAkAAAgSAAAQJAAAIEgAAECQAACAIAEAAEECAACCBAAABAkAAAgSAAAQJAAAIEgAAECQAFjfj9Ev
        AEgyexYnAAAgSAAAQJAA2IOrOOBKZs4GBMA+HEjgCmbNJl5GvwAO9fpgfh/2KoDdWPobEgD7cmAB+JCv
        AAAgSAAAQJAAAIAgAQAAQQIAAIIEAAAECQAACBIAABAkAAAgyK+L/clvzQNoye8/NwAAECQAACBIAABA
        UP47kFf8HABAg933zQ0AACQJAAAIcg3yN18DAOzN3vvFDQAABAkAAAhyFfIvXwMA7MnOe8UNAAAEqaH3
        uQUA2It994YbAAAIUkQfcwsAsAe77h0eyudEAMDa7LkP+AoAAIKU0dfcAgCsyY77hIdzGxEAsBb77Qu+
        AgCAIIV0O7cAAGuw227gId1HBADMzV67kQd1PxEAMCc77Q4e1mNEAMBc7LM7eWCPEwEAc7DLHuChPUcE
        AIxljz3Ig3ueCAAYww57god3DBEAcC3760ke4HFEAMA17K4DeIjHEwIA57CzDuRhnkMEABzLvjqYB3ou
        IQDwHHvqJB7s+UQAwGPsqBN5uNcRAgC3sZsu4CFfTwgAvM9OupCHPZYYAOrsoUE8+HmIAaDC7pmAv4R5
        CQJgF3bNhP4HeACN28kd4/AAAAAASUVORK5CYII=
</value>
  </data>
</root>